variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  DOCKER_REGISTRY: 10.10.10.106:5000
  KAFKA_IMAGE_NAME: breacher/kafka
  KAFKA_IMAGE_TAG: v2.0

services:
  - docker:20.10.16-dind

stages:
- build
- deploy
- test

build_kafka:
  stage: build
  image: docker:20.10.16
  before_script:
    - docker info
  script:
    - cd applications/kafka
    - docker build -t $KAFKA_IMAGE_NAME:$KAFKA_IMAGE_TAG .
    - docker tag $KAFKA_IMAGE_NAME:$KAFKA_IMAGE_TAG $DOCKER_REGISTRY/$KAFKA_IMAGE_NAME:$KAFKA_IMAGE_TAG
    - docker push $DOCKER_REGISTRY/$KAFKA_IMAGE_NAME:$KAFKA_IMAGE_TAG

deploy_minio:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - cd applications/minio
    - kubectl apply -f namespace.yaml
    - kubectl delete secret minio-credentials --ignore-not-found -n minio
    - kubectl create secret generic minio-credentials --from-literal=MINIO_ROOT_USER=$MINIO_ROOT_USER --from-literal=MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD -n minio # define in Gitlab ENV
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml

deploy_crawlab:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - cd applications/crawlab
    - kubectl apply -f namespace.yaml
    - kubectl apply -f mongo-statefulset.yaml
    - kubectl apply -f mongo-service.yaml
    - kubectl apply -f redis-deployment.yaml
    - kubectl apply -f redis-service.yaml
    - kubectl apply -f crawlab-deployment.yaml
    - kubectl apply -f crawlab-service.yaml

deploy_torproxy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - cd applications/torproxy
    - kubectl apply -f namespace.yaml
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml

deploy_kafka:
  stage: deploy
  needs:
    - deploy_crawlab
  script:
    - echo "deploy_kafka"
    
deploy_oniondownloader:
  stage: deploy
  needs:
    - deploy_torproxy
    - deploy_minio
    - deploy_kafka
  script:
    - echo "deploy_oniondownloader"
    

