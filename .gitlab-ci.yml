stages:
- deploy
- test

deploy_minio:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - cd applications/minio
    - kubectl apply -f namespace.yaml
    - kubectl delete secret minio-credentials --ignore-not-found -n minio
    - kubectl create secret generic minio-credentials --from-literal=MINIO_ROOT_USER=$MINIO_ROOT_USER --from-literal=MINIO_ROOT_PASSWORD=$MINIO_ROOT_PASSWORD -n minio # define in Gitlab ENV
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml

deploy_crawlab:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - cd applications/crawlab
    - kubectl apply -f namespace.yaml
    - kubectl apply -f mongo-statefulset.yaml
    - kubectl apply -f mongo-service.yaml
    - kubectl apply -f redis-deployment.yaml
    - kubectl apply -f redis-service.yaml
    - kubectl apply -f crawlab-deployment.yaml
    - kubectl apply -f crawlab-service.yaml

deploy_torproxy:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  script:
    - cd applications/torproxy
    - kubectl apply -f namespace.yaml
    - kubectl apply -f deployment.yaml
    - kubectl apply -f service.yaml

deploy_kafka:
  stage: deploy
  needs:
    - deploy_crawlab
  script:
    - echo "deploy_kafka"
    
deploy_oniondownloader:
  stage: deploy
  needs:
    - deploy_torproxy
    - deploy_minio
    - deploy_kafka
  script:
    - echo "deploy_oniondownloader"
    

